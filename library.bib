Automatically generated by Mendeley Desktop 1.18
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Pohl,
abstract = {See, stats, and : https : / / www . researchgate . net / publication / 4251457 Variability Engineering Conference DOI : 10 . 1109 / ICSECOMPANION . 2007 . 83 : IEEE CITATIONS 67 READS 292 2 : Some : SPES IObserve Andreas University - Essen 127 , 840 SEE Klaus University - Essen 288 , 393 SEE All . The . ABSTRACT By explicitly modeling and managing variability , software prod - uct line engineering provides a systematic approach for creating a diversity of similar products at low cost , in short time , and with high quality . This tutorial focuses on the two principle differences of software product line engineering when compared to single systems development : The differentiation of two key development processes (domain engineering and application engineering) and the explicit representation and management of variability . We characterize the two processes and their main activities and intro - duce the orthogonal variability modeling approach (OVM) . We further illustrate the OVM approach in the product line require - ments engineering and product line testing activities .},
author = {Pohl, Klaus and Metzger, Andreas},
doi = {10.1109/ICSECOMPANION.2007.83},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Pohl, Metzger - Unknown - Variability Management in Software Product Line Engineering.pdf:pdf},
keywords = {Categories and,Descriptors,Subject},
title = {{Variability Management in Software Product Line Engineering}},
url = {https://www.researchgate.net/profile/Andreas{\_}Metzger/publication/4251457{\_}Variability{\_}Management{\_}in{\_}Software{\_}Product{\_}Line{\_}Engineering/links/0deec539990d1e1feb000000.pdf}
}
@incollection{Kang2013,
abstract = {The aim of this chapter is to provide a comprehensive description of the notion of variability modeling in the context of software product line engineering and to give an overview of the techniques proposed for variability modeling.},
author = {Kang, Kyo C. and Lee, Hyesun},
booktitle = {Syst. Softw. Var. Manag.},
doi = {10.1007/978-3-642-36583-6},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Kang, Lee - Unknown - Variability Modeling.pdf:pdf},
isbn = {978-3-642-36582-9},
pages = {25--42},
title = {{Variability Modeling}},
url = {http://link.springer.com/10.1007/978-3-642-36583-6},
year = {2013}
}
@inproceedings{Sinnema2004,
abstract = {A key aspect of variability management in software product families is the explicit representation of the variability . Experiences at several industrial software development companies have shown that a software variability model (1) should uniformly represent variation points as first class entities in all abstraction layers (ranging from features to code) and (2) allow for hierarchical organization of the variability . It furthermore (3) should allow for first class representation of simple , i . e . one - to - one , and complex , i . e . n - to - m , dependencies , and (4) allow for modeling the relations between dependencies . Existing variability modeling approaches only support the first two requirements , but lack support for the latter two . The contribution of this paper is a framework for variability modeling , COVAMOF , that provides support for all four requirements .},
author = {Sinnema, Marco and Deelstra, Sybren and Nijhuis, Jos and Bosch, Jan},
doi = {10.1007/978-3-540-28630-1_12},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Sinnema et al. - 2004 - COVAMOF A Framework for Modeling Variability in Software Product Families.pdf:pdf},
title = {{COVAMOF : A Framework for Modeling Variability in Software Product Families}},
url = {https://www.researchgate.net/profile/Jan{\_}Bosch/publication/220789726{\_}COVAMOF{\_}A{\_}Framework{\_}for{\_}Modeling{\_}Variability{\_}in{\_}Software{\_}Product{\_}Families/links/09e415086dcdf501dc000000.pdf},
year = {2004}
}
@article{Prehofer,
abstract = {We propose a new model for exible composition of objects from a set of features. Features are similar to (abstract) subclasses, but only provide the core functionality of a (sub)class. Overwriting other methods is viewed as resolving feature interactions and is speciied sep-arately for two features at a time. This programming model allows to compose features (almost) freely in a way which generalizes inheritance and aggregation. For a set of n features, an exponential number of dif-ferent feature combinations is possible, assuming a quadratic number of interaction resolutions. We present the feature model as an extension of Java and give two translations to Java, one via inheritance and the other via aggregation. We further discuss parameterized features, which work nicely with our feature model and can be translated into Pizza, an extension of Java.},
author = {Prehofer, Christian},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Prehofer - Unknown - Feature-Oriented Programming A Fresh Look at Objects.pdf:pdf},
title = {{Feature-Oriented Programming: A Fresh Look at Objects}},
url = {https://pdfs.semanticscholar.org/4c38/b0b0423ab527f70a94c701cfb11ea5567a86.pdf}
}
@inproceedings{Batory2005,
abstract = {Feature models are used to specify members of a product-line. Despite years of progress, contemporary tools often provide limited support for feature constraints and offer little or no support for debugging feature models. We integrate prior results to connect feature models, grammars, and propositional formulas. This connection allows arbitrary propositional constraints to be defined among features and enables off-the-shelf satisfiability solvers to debug feature models. We also show how our ideas can generalize recent results on the staged configuration of feature models.},
author = {Batory, Don},
booktitle = {LNCS},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Batory - 2005 - Feature Models, Grammars, and Propositional Formulas.pdf:pdf},
pages = {7--20},
title = {{Feature Models, Grammars, and Propositional Formulas}},
url = {http://www.cs.utexas.edu/ftp/predator/splc05.pdf},
volume = {3714},
year = {2005}
}
@article{Harber1991,
author = {Harber, Stuart and Stornetta, W.Scott},
file = {:home/agne/Downloads/Haber{\_}Stornetta.pdf:pdf},
journal = {J. Cryptogr.},
pages = {99--111},
title = {{How To Timestamp a Digital Document}},
url = {https://drive.google.com/drive/u/0/folders/16gqFYqjV2t8Lb1c54jRC6x4b6wWuCOWb},
volume = {3},
year = {1991}
}
@book{Kang1990,
abstract = {Chemical category is a regulatory concept facilitating filling safety data gaps. Practically, all chemical management programs like the OECD HPV Program, EU REACH, or the Canadian DSL Categorization are planning to use or are already using categorization approaches to reduce resources including animal testing. The aim of the study was to discuss the feasibility to apply computational structural similarity methods to augment formation of a category. The article discusses also how this understanding can be translated into computer readable format, an ultimate need for practical, broad scope applications. We conclude that for the skin sensitization endpoint, used as a working example, mechanistic understanding expressed as chemical reactivity can be exploited by computational structural similarity methods to augment category formation process. We propose a novel method, atom environments ranking (AER), to assess similarity to a reference training set representing a common mechanism of action, as a potential method for grouping chemicals into reactivity domains.},
author = {Kang, Kyo C. and Cohen, Sholom G. and Hess, James A. and Novak, William E. and Peterson, A. Spencer},
booktitle = {SAR QSAR Environ. Res.},
doi = {10.1080/10629360701306050},
file = {:home/agne/Downloads/ADA235785.pdf:pdf},
isbn = {1111111111},
issn = {1062936X},
keywords = {Atom environments,Category formation,Mechanism of action,Similarity assessment,Skin sensitization},
number = {3-4},
pmid = {17514565},
title = {{Feature-Oriented Domain Analysis (FODA) Feasibility Study}},
volume = {18},
year = {1990}
}
@incollection{Kang2013a,
author = {Kang, Kyo C. and Lee, Hyesun},
booktitle = {Syst. Softw. Var. Manag.},
doi = {10.1007/978-3-642-36583-6_2},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Kang, Lee - Unknown - Variability Modeling.pdf:pdf},
pages = {25--42},
title = {{Variability Modeling}},
url = {https://pdfs.semanticscholar.org/b8e1/654f75008acd9ac0d4c4374848fcc31695a8.pdf},
year = {2013}
}
@unpublished{Buterin2014,
abstract = {When Satoshi Nakamoto first set the Bitcoin blockchain into motion in January 2009, he was simultaneously introducing two radical and untested concepts. The first is the "bitcoin", a decentralized peer-to-peer online currency that maintains a value without any backing, intrinsic value or central issuer. So far, the "bitcoin" as a currency unit has taken up the bulk of the public attention, both in terms of the political aspects of a currency without a central bank and its extreme upward and downward volatility in price. However, there is also another, equally important, part to Satoshi's grand experiment: the concept of a proof of work-based blockchain to allow for public agreement on the order of transactions. Bitcoin as an application can be described as a first-to-file system: if one entity has 50 BTC, and simultaneously sends the same 50 BTC to A and to B, only the transaction that gets confirmed first will process. There is no intrinsic way of determining from two transactions which came earlier, and for decades this stymied the development of decentralized digital currency. Satoshi's blockchain was the first credible decentralized solution. And now, attention is rapidly starting to shift toward this second part of Bitcoin's technology, and how the blockchain concept can be used for more than just money. Commonly cited applications include using on-blockchain digital assets to represent custom currencies and financial instruments ("colored coins"), the ownership of an underlying physical device ("smart property"), non-fungible assets such as domain names ("Namecoin") as well as more advanced applications such as decentralized exchange, financial derivatives, peer-to-peer gambling and on-blockchain identity and reputation systems. Another important area of inquiry is "smart contracts" -systems which automatically move digital assets according to arbitrary pre-specified rules. For example, one might have a treasury contract of the form "A can withdraw up to X currency units per day, B can withdraw up to Y per day, A and B together can withdraw anything, and A can shut off B's ability to withdraw". The logical extension of this is decentralized autonomous organizations (DAOs) -long-term smart contracts that contain the assets and encode the bylaws of an entire organization. What Ethereum intends to provide is a blockchain with a built-in fully fledged Turing-complete programming language that can be used to create "contracts" that can be used to encode arbitrary state transition functions, allowing users to create any of the systems described above, as well as many others that we have not yet imagined, simply by writing up the logic in a few lines of code.},
author = {Buterin, Vitalik},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Buterin - 2014 - A NEXT GENERATION SMART CONTRACT {\&}amp DECENTRALIZED APPLICATION PLATFORM.pdf:pdf},
title = {{A NEXT GENERATION SMART CONTRACT {\&} DECENTRALIZED APPLICATION PLATFORM}},
url = {https://www.weusecoins.com/assets/pdf/library/Ethereum{\_}white{\_}paper-a{\_}next{\_}generation{\_}smart{\_}contract{\_}and{\_}decentralized{\_}application{\_}platform-vitalik-buterin.pdf},
year = {2014}
}
@unpublished{Czarnecki2005,
abstract = {Software factories have been proposed as a comprehensive and integrative approach to generative software develop-ment. Feature modeling has several applications in gen-erative software development, including domain analysis, product-line scoping, and feature-based product specifica-tion. This paper reports on our recent progress in cardinality-based feature modeling and its support for expressing ad-ditional constraints. We show that the Object-Constraint Language (OCL) can adequately capture such constraints. Furthermore, we identify a set of facilities based on con-straint satisfaction that can be provided by feature modeling and feature-based configuration tools and present a proto-type implementing some of these facilities. We report on our experience with the prototype and give directions for future work.},
author = {Czarnecki, Krzysztof and Hwan, Chang and Kim, Peter},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Czarnecki, Hwan, Kim - 2005 - Cardinality-Based Feature Modeling and Constraints A Progress Report.pdf:pdf},
title = {{Cardinality-Based Feature Modeling and Constraints: A Progress Report}},
url = {http://softwarefactories.com/workshops/OOPSLA-2005/Papers/Czarnecki.pdf},
year = {2005}
}
@unpublished{Nakamoto2008,
abstract = {A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.},
archivePrefix = {arXiv},
arxivId = {43543534534v343453},
author = {Nakamoto, Satoshi},
doi = {10.1007/s10838-008-9062-0},
eprint = {43543534534v343453},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Satoshi Nakamoto - 2008 - Bitcoin A Peer-to-Peer Electronic Cash System.pdf:pdf},
isbn = {978-972-757-716-3},
issn = {09254560},
pmid = {14533183},
title = {{Bitcoin: A Peer-to-Peer Electronic Cash System}},
url = {https://bitcoin.org/bitcoin.pdf},
year = {2008}
}
@book{Swan2015,
abstract = {Bitcoin is starting to come into its own as a digital currency, but the blockchain technology behind it could prove to be much more significant. This book takes you beyond the currency (" Blockchain 1.0 ") and smart contracts (" Blockchain 2.0 ") to demonstrate how the blockchain is in position to become the fifth disruptive computing paradigm after mainframes, PCs, the Internet, and mobile/social networking. Author Melanie Swan, Founder of the Institute for Blockchain Studies, explains that the blockchain is essentially a public ledger with potential as a worldwide, decentralized record for the registration, inventory, and transfer of all assets—not just finances, but property and intangible assets such as votes, software, health data, and ideas. Topics include: ■ Concepts, features, and functionality of Bitcoin and the blockchain ■ Using the blockchain for automated tracking of all digital endeavors ■ Enabling censorship-resistant organizational models ■ Creating a decentralized digital repository to verify identity ■ Possibility of cheaper, more efficient services traditionally provided by nations ■ Blockchain for science: making better use of the data-mining network ■ Personal health record storage, including access to one's own genomic data ■ Open access academic publishing on the blockchain This book is part of an ongoing O'Reilly series. Mastering Bitcoin: Unlocking Digital Cryptocurrencies introduces Bitcoin and describes the technology behind Bitcoin and the blockchain. Blockchain: Blueprint for a New Economy considers the theoretical, philosophical, and societal impact of cryptocurrencies and blockchain technologies.},
author = {Swan, Melanie},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Melanie Swan - 2015 - Blockchain. Blueprint for a new economy.pdf:pdf},
isbn = {978-1-491-92049-7},
keywords = {Blockchain},
mendeley-tags = {Blockchain},
pages = {149},
title = {{Blockchain. Blueprint for a new economy}},
url = {http://w2.blockchain-tec.net/blockchain/blockchain-by-melanie-swan.pdf},
year = {2015}
}
@inproceedings{Lee2015,
abstract = {Product line software engineering (PLSE) is an emerging software engineering paradigm , which guides organizations toward the development of products from core assets rather than the development of products one by one from scratch . In order to develop highly reusable core assets , PLSE must have the ability to exploit commonality and manage variability among products from a domain perspective . Feature modeling is one of the most popular domain analysis techniques , which analyzes commonality and variability in a domain to develop highly reusable core assets for a product line . Various attempts have been made to extend and apply it to the development of software product lines . However , feature modeling can be difficult and time - consuming without a pre - cise understanding of the goals of feature modeling and the aid of practical guidelines . In this paper , we clarify the concept of features and the goals of fea - ture modeling , and provide practical guidelines for successful product line soft - ware engineering . The authors have extensively used feature modeling in sev - eral industrial product line projects and the guidelines described in this paper are based on these experiences .},
author = {Lee, Kwanwoo and Kang, Kyo C. and Lee, Jaejoon},
doi = {10.1007/3-540-46020-9_5},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Lee, Kang, Lee - 2015 - Concepts and Guidelines of Feature Modeling for Product Line Software Engineering.pdf:pdf},
title = {{Concepts and Guidelines of Feature Modeling for Product Line Software Engineering}},
url = {https://www.researchgate.net/profile/Kwanwoo{\_}Lee/publication/221553200{\_}Concepts{\_}and{\_}Guidelines{\_}of{\_}Feature{\_}Modeling{\_}for{\_}Product{\_}Line{\_}Software{\_}Engineering/links/558bdbde08ae591c19d8d3ce.pdf},
year = {2015}
}
@inproceedings{Czarnecki2004,
abstract = {Feature modeling is an important approach to capturing commonalities and variabilities in system families and product lines. In this paper, we propose a cardinality-based notation for feature modeling, which integrates a number of existing extensions of previous approaches. We then introduce and motivate the novel concept of staged configura-tion. Staged configuration can be achieved by the stepwise specialization of feature models. This is important because in a realistic development process, different groups and different people eliminate product variabil-ity in different stages. We also indicate how cardinality-based feature models and their specialization can be given a precise formal semantics.},
author = {Czarnecki, Krzysztof and Helsen, Simon and Eisenecker, Ulrich},
file = {:home/agne/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Czarnecki, Helsen, Eisenecker - 2004 - Staged Configuration Using Feature Models.pdf:pdf},
title = {{Staged Configuration Using Feature Models}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.95.1586{\&}rep=rep1{\&}type=pdf},
year = {2004}
}
